{"version":3,"sources":["Home.jsx","About.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Container_default","className","Card_default","Header","Body","Title","Text","ListGroup_default","Item","Nav_default","Link","href","About","Image_default","thumbnail","rounded","src","App","react_router_dom","Navbar_default","collapseOnSelect","expand","bg","variant","Brand","role","aria-label","Toggle","aria-controls","Collapse","id","to","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+TA8BeA,MAxBf,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAWG,UAAU,QACnBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMG,UAAU,sBACdJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAKK,OAAN,KACEN,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACG,EAAAJ,EAAKM,KAAN,KACEP,EAAAC,EAAAC,cAACG,EAAAJ,EAAKO,MAAN,wBACAR,EAAAC,EAAAC,cAACG,EAAAJ,EAAKQ,KAAN,4EACAT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAUU,KAAX,KACEX,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUC,KAAK,gDAAf,iBAEFd,EAAAC,EAAAC,cAACQ,EAAAT,EAAUU,KAAX,KACEX,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUC,KAAK,iDAAf,uCCaCC,MA7Bf,WACE,OACEf,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAWG,UAAU,QACnBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMG,UAAU,sBACdJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAKK,OAAN,KACEN,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAACG,EAAAJ,EAAKM,KAAN,KACEP,EAAAC,EAAAC,cAACG,EAAAJ,EAAKO,MAAN,wBACAR,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAOG,UAAU,kBAAkBa,WAAW,EAAOC,SAAS,EAAMC,IAAI,mBACxEnB,EAAAC,EAAAC,cAACG,EAAAJ,EAAKQ,KAAN,mDACAT,EAAAC,EAAAC,cAACG,EAAAJ,EAAKQ,KAAN,k2CC0BKW,MA9Bf,WACE,OACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAQsB,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrD1B,EAAAC,EAAAC,cAACoB,EAAArB,EAAO0B,MAAR,CAAcb,KAAK,SACjBd,EAAAC,EAAAC,cAAA,QAAM0B,KAAK,MAAMC,aAAW,mBAA5B,kCADF,kBAMA7B,EAAAC,EAAAC,cAACoB,EAAArB,EAAO6B,OAAR,CAAeC,gBAAc,0BAC7B/B,EAAAC,EAAAC,cAACoB,EAAArB,EAAO+B,SAAR,CAAiBC,GAAG,yBAClBjC,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACED,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMjB,UAAU,WAAW8B,GAAG,KAA9B,QAGAlC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMjB,UAAU,WAAW8B,GAAG,UAA9B,YAMNlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvC,IACjCC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAWvB,OCxB1BwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1bbb18a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container className=\"my-3\">\r\n      <Card className=\"bg-dark text-light\">\r\n        <Card.Header>\r\n          <h4>Home</h4>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>Stuff I've Done</Card.Title>\r\n          <Card.Text>The following is a list of JavaScript web apps that I have created.</Card.Text>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <Nav.Link href=\"https://jonathan-meyer.github.io/TriviaGame/\">Trivia Game!</Nav.Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Nav.Link href=\"https://jonathan-meyer.github.io/unit-4-game/\">StarWars RPG</Nav.Link>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nfunction About() {\r\n  return (\r\n    <Container className=\"my-3\">\r\n      <Card className=\"bg-dark text-light\">\r\n        <Card.Header>\r\n          <h4>About</h4>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>White and Nerdy</Card.Title>\r\n          <Image className=\"float-left mr-3\" thumbnail={false} rounded={true} src=\"../old/mug.jpg\" />\r\n          <Card.Text>I'm an average guy who likes nerdy things.</Card.Text>\r\n          <Card.Text>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga sequi odio officia? Mollitia temporibus doloribus illo inventore tenetur similique!\r\n            Ipsam magnam laborum porro, soluta nihil blanditiis iste. Mollitia a aliquid placeat ipsam impedit quos, exercitationem ducimus voluptatum\r\n            aspernatur inventore consectetur nihil accusamus iure, eaque quaerat adipisci, dolores aliquam optio enim eius. Placeat voluptatum ad impedit\r\n            tenetur dolore. Non consectetur nostrum, exercitationem obcaecati, sapiente nulla sit dignissimos eum vel, eius culpa minima recusandae aut placeat\r\n            cum quis explicabo nemo mollitia fugit reprehenderit. Rem, deleniti? Aspernatur repellendus ex blanditiis illum hic eaque deleniti iusto, aliquid et\r\n            ipsa voluptas, animi molestias cupiditate, cumque ullam quis. Dolore commodi id sed tempore iusto itaque, a fugiat at debitis corporis dolorem,\r\n            optio, odit quo autem quia aliquam? Ad, dolorum. Asperiores repellat qui molestias consequuntur aspernatur amet, aliquam quis ab maxime quae quidem,\r\n            reprehenderit consectetur perferendis? Cum consequuntur accusantium veniam blanditiis praesentium eveniet reprehenderit laboriosam omnis,\r\n            consectetur quos hic, deleniti fugiat ea, magni quam neque optio illo at fuga voluptatem! Quae ullam, quod iusto cumque illo sed quis nemo hic\r\n            suscipit enim distinctio expedita accusantium, sit doloribus.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport Home from \"./Home\";\nimport About from \"./About\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            <span role=\"img\" aria-label=\"White and Nerdy\">\n              üë±üèª‚Äç\n            </span>\n            Jonathan Meyer\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav>\n              <Link className=\"nav-link\" to=\"/\">\n                Home\n              </Link>\n              <Link className=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" exact component={About} />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}